apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2023-06-19T23:33:19Z"
  generation: 1
  labels:
    app: db-cgm
  name: db-cgm
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: db-cgm
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: db-cgm
    spec:
      securityContext:
        runAsUser: 3050
        runAsGroup: 3050
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: changeme
        image: postgres:latest
        imagePullPolicy: Always
        name: postgres
        resources: 
          limits:
            cpu: "2000m"
            memory: "2048Mi"
          requests:
            cpu: "500m"
            memory: "256Mi"
        volumeMounts:
        - name: datavol
          mountPath: /var/lib/postgresql/data
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: datavol
        nfs:
          server: 192.168.1.10
          path: /mnt/servicesTank/dbCGM
          readOnly: false
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: lb-db-cgm
  namespace: default
spec:
  ports:
  - name: db-tcp-db-cgm
    port: 80
    protocol: TCP
    targetPort: 5432
  selector:
    app: db-cgm
  sessionAffinity: None
  type: LoadBalancer