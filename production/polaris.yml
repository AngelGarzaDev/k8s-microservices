---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: polaris
  name: polaris
spec:
  replicas: 1
  selector:
    matchLabels:
      app: polaris
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.network/serveradmin-default: "true"
        app: polaris
    spec:
      containers:
        - image: ogarcia/polaris
          name: polaris
          ports:
            - containerPort: 5050
          resources:
            limits:
              cpu: "2000m"
              memory: "2048Mi"
          volumeMounts:                       # In this section we specify where our NFS volume will mount in the running container.
          - name: datavol                     # Mount name. Must match corresponding volume name below.
            mountPath: /var/lib/polaris       # Path in the container. We chose Polari's default data directory.
          - name: cachevol                    
            mountPath: /var/cache/polaris
          - name: musicdir
            mountPath: /music
      volumes:                                # In this section we specify the volumes that will be mounted to the container. I'm using an NFS server to store Polaris's data, cache, and music.
      - name: datavol
        nfs:
          server: 192.168.1.10
          path: /mnt/servicesTank/polaris
          readOnly: false
      - name: cachevol
        nfs:
          server: 192.168.1.10
          path: /mnt/servicesTank/polaris/cache
          readOnly: false
      - name: musicdir
        nfs:
          server: 192.168.1.10
          path: /mnt/cpool1/media/music/Music
          readOnly: true
      restartPolicy: Always
status: {}


---
kind: Service
apiVersion: v1
metadata:
  name: polaris-tcp       
  namespace: production              # < namespace where to place service
spec:
  selector:
    app: polaris           # < reference to the deployment (connects the service with the deployment)
  ports:
  - port: 5050             # < port to open on the outside on the server
    targetPort: 5050       # < targetport. port on the pod to passthrough
    name: http-tcp         # < reference name for the port in the deployment yaml
    protocol: TCP
  type: LoadBalancer
  loadBalancerIP: 192.168.3.83 # < IP to access your Polaris server. Should be one from the MetalLB range and the same as the TCP yaml
  sessionAffinity: ClientIP